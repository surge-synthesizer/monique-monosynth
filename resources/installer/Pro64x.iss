; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "Monique"
#define MyAppVersion "1.1.0.0"  
#define MyAppPublisher "Monoplugs"
#define MyAppURL "http://monique.monoplugs.com"
#define MyAppExeName "Monique.exe"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{91D13D8C-7FEE-4E8F-B84F-2CD7BDFDD822}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={pf}\Monoplugs\Monique
DefaultGroupName=Monoplugs
DisableProgramGroupPage=yes
LicenseFile=LICENSE.rtf
OutputDir=..\..\..\Builds\Monique\WINDOWS\
OutputBaseFilename=Monique_1100
SolidCompression=yes
AppCopyright=Monoplugs
ArchitecturesInstallIn64BitMode=x64
SetupIconFile=icon.ico
InfoAfterFile=README.txt
VersionInfoVersion=1.1.0.0
VersionInfoCompany=Monoplugs
VersionInfoDescription=Monophonic Unique Synthesizer
VersionInfoCopyright=Monoplugs
VersionInfoProductName=Monique
VersionInfoProductVersion=1.1.0.0
VersionInfoProductTextVersion=1.1.0.0
ChangesAssociations=True
UsePreviousSetupType=True
UsePreviousTasks=True
ShowTasksTreeLines=True
AlwaysShowDirOnReadyPage=True
UsePreviousLanguage=True

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"
Name: "german"; MessagesFile: "compiler:Languages\German.isl"

[Types]
Name: "full"; Description: "Full installation"   
Name: "only_standalone"; Description: "Standalone Application and Docs"
Name: "only_vst"; Description: "VST 2.4 and Docs"
Name: "only_vst3"; Description: "VST 3 and Docs"
; Name: "only_aax"; Description: "AAX and Docs"
Name: "Custom"; Description: "Custom install"; Flags: IsCustom

[Components]
; STANDALONE
Name: "stand_64"; Description: "Monique Application"; Types: full only_standalone; Check: IsWin64;
Name: "stand_32"; Description: "Monique Application"; Types: full only_standalone; Check: not IsWin64;  
; VST
Name: "vst64"; Description: "VST 2.4 64bit Monique Plugin"; Types: full only_vst; Check: IsWin64
Name: "vst32"; Description: "VST 2.4 32bit Monique Plugin"; Types: full only_vst
; VST3
Name: "vst3_64"; Description: "VST 3 64bit Monique Plugin"; Types: full only_vst3; Check: IsWin64
Name: "vst3_32"; Description: "VST 3 32bit Monique Plugin"; Types: full only_vst3
; AAX
;Name: "aax"; Description: "AAX 32bit & 64bit Monique Plugin Bundle"; Types: full only_aax
; MANUALS
;Name: "docs"; Description: "Monique Manual English & German"; Types: full only_standalone only_vst3 only_vst only_aax
Name: "docs"; Description: "Monique Manual English & German"; Types: full only_standalone only_vst3 only_vst

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Components: stand_64 stand_32;
Name: "quicklaunchicon"; Description: "{cm:CreateQuickLaunchIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked; OnlyBelowVersion: 0,6.1; Components: stand_64 stand_32;

[Files]
; STANDALONE
Source: "..\..\..\Builds\Monique\WINDOWS\Monique_64.exe"; DestDir: "{app}"; DestName: "Monique.exe"; Components: stand_64; Flags: ignoreversion
Source: "..\..\..\Builds\Monique\WINDOWS\Monique_32.exe"; DestDir: "{app}"; DestName: "Monique.exe";  Components: stand_32; Flags: ignoreversion
; VST
Source: "..\..\..\Builds\Monique\WINDOWS\Monique_64.dll"; DestDir: "{code:getVST64dir}"; DestName: "Monique.dll";  Components: vst64; Flags: ignoreversion
Source: "..\..\..\Builds\Monique\WINDOWS\Monique_32.dll"; DestDir: "{code:getVST32dir}"; DestName: "Monique_32.dll"; Components: vst32; Flags: ignoreversion 
; VST3
Source: "..\..\..\Builds\Monique\WINDOWS\Monique_64.vst3"; DestDir: "{code:getVST3_64dir}\Monoplugs"; DestName: "Monique.vst3";  Components: vst3_64; Flags: ignoreversion
Source: "..\..\..\Builds\Monique\WINDOWS\Monique_32.vst3"; DestDir: "{code:getVST3_32dir}\Monoplugs"; DestName: "Monique_32.vst3"; Components: vst3_32; Flags: ignoreversion       
; AAX 
;Source: "E:\PROJECT-Monique\Plugin_AXX\Builds\WINDOWS\Monique.aaxplugin\desktop.ini"; DestDir: "{code:getAAXdir}\Monique.aaxplugin"; DestName: "desktop.ini"; Components: aax; Flags: ignoreversion  
;Source: "E:\PROJECT-Monique\Plugin_AXX\Builds\WINDOWS\Monique.aaxplugin\PlugIn.ico"; DestDir: "{code:getAAXdir}\Monique.aaxplugin"; DestName: "PlugIn.ico"; Components: aax; Flags: ignoreversion   
;Source: "E:\PROJECT-Monique\Plugin_AXX\Builds\WINDOWS\Monique.aaxplugin\Contents\Win32\Monique.aaxplugin"; DestDir: "{code:getAAXdir}\Monique.aaxplugin\Contents\Win32"; DestName: "Monique.aaxplugin"; Components: aax; Flags: ignoreversion
;Source: "E:\PROJECT-Monique\Plugin_AXX\Builds\WINDOWS\Monique.aaxplugin\Contents\x64\Monique.aaxplugin"; DestDir: "{code:getAAXdir}\Monique.aaxplugin\Contents\x64"; DestName: "Monique.aaxplugin"; Components: aax; Flags: ignoreversion
; MANUALS                 
Source: "..\..\Manual\Manual-English.pdf"; DestDir: "{app}"; DestName: "Manual-English.pdf"; Components: docs; Flags: ignoreversion
Source: "..\..\Manual\Manual-German.pdf"; DestDir: "{app}"; DestName: "Manual-German.pdf"; Components: docs; Flags: ignoreversion
; NOTE: Don't use "Flags: ignoreversion" on any shared system files
                                    
[Icons]
Name: "{group}\Monique"; Filename: "{app}\{#MyAppExeName}"; Components: stand_64 stand_32; 
Name: "{group}\Manual-English.pdf"; Filename: "{app}\Manual-English.pdf"; Components: docs; 
Name: "{group}\Manual-German.pdf"; Filename: "{app}\Manual-German.pdf"; Components: docs;  
Name: "{group}\{cm:ProgramOnTheWeb,{#MyAppName}}"; Filename: "{#MyAppURL}"
Name: "{group}\{cm:UninstallProgram,{#MyAppName}}"; Filename: "{uninstallexe}"
Name: "{commondesktop}\Monique"; Filename: "{app}\Monique"; Tasks: desktopicon
Name: "{userappdata}\Microsoft\Internet Explorer\Quick Launch\Monique"; Filename: "{app}\{#MyAppExeName}"; Tasks: quicklaunchicon; Components: stand_64 stand_32; 

[Run]
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Components: stand_64 stand_32; Flags: nowait postinstall skipifsilent
Filename: "{app}\Manual-English.pdf"; Description: "Show User Manual"; Languages: english; Components: docs; Flags: nowait postinstall skipifsilent shellexec runasoriginaluser unchecked  
Filename: "{app}\Manual-German.pdf"; Description: "Deutsches Handbuch öffnen"; Languages: german; Components: docs; Flags: nowait postinstall skipifsilent shellexec runasoriginaluser unchecked       

; --------------------------------------------------------------
; --------------------------------------------------------------
; --------------------------------------------------------------
[Code]
// -------------------------------------------------------------- 
// --------------------------------------------------------------
// --------------------------------------------------------------
var
  VST64_DirPage: TInputDirWizardPage;
  VST32_DirPage: TInputDirWizardPage;  
  VST64_PageId: Integer;
  VST32_PageId: Integer;  

  VST3_64_DirPage: TInputDirWizardPage;
  VST3_32_DirPage: TInputDirWizardPage;   
  VST3_64_PageId: Integer;
  VST3_32_PageId: Integer;  

  AAX_DirPage: TInputDirWizardPage;
  AAX_PageId: Integer;    
                     
// -------------------------------------------------------------- 
// --------------------------------------------------------------
// --------------------------------------------------------------
procedure InitializeWizard;
begin
  // ***** VST *****
  // *************** 
  // ***************
  // Create the VST64 PAGE
  VST64_DirPage := CreateInputDirPage(wpSelectComponents,
    'Select the VST64 Directory', 'Where should the VST64 plugin be installed?',
    'Select the folder in which Setup should install the VST64 plugin, then click Next.',
    False, '');
  VST64_DirPage.Add('');

  VST64_DirPage.Values[0] := GetPreviousData('vst64Dir', '');
  VST64_PageId := VST64_DirPage.ID;

  // Create the VST32 PAGE
  VST32_DirPage := CreateInputDirPage(wpSelectComponents,
    'Select the VST32 Directory', 'Where should the VST32 plugin be installed?',
    'Select the folder in which Setup should install the VST32 plugin, then click Next.',
    False, '');
  VST32_DirPage.Add('');

  VST32_DirPage.Values[0] := GetPreviousData('vst32Dir', '');
  VST32_PageId := VST32_DirPage.ID;

  // ***** VST 3 *****
  // *****************
  // *****************
  VST3_64_DirPage := CreateInputDirPage(wpSelectComponents,
    'Select the VST3_64 Directory', 'Where should the VST3_64 plugin be installed?',
    'Select the folder in which Setup should install the VST3_64 plugin, then click Next.',
    False, '');
  VST3_64_DirPage.Add('');

  VST3_64_DirPage.Values[0] := GetPreviousData('vst3_64Dir', '');
  VST3_64_PageId := VST3_64_DirPage.ID;

  // Create the VST3_32 PAGE
  VST3_32_DirPage := CreateInputDirPage(wpSelectComponents,
    'Select the VST3_32 Directory', 'Where should the VST3_32 plugin be installed?',
    'Select the folder in which Setup should install the VST3_32 plugin, then click Next.',
    False, '');
  VST3_32_DirPage.Add('');

  VST3_32_DirPage.Values[0] := GetPreviousData('vst3_32Dir', '');
  VST3_32_PageId := VST3_32_DirPage.ID;

  // ***** AAX *****   
  // ***************
  // ***************
  // Create the AAX PAGE
  AAX_DirPage := CreateInputDirPage(wpSelectComponents,
    'Select the AAX Directory', 'Where should the AAX plugin be installed?',
    'Select the folder in which Setup should install the AAX plugin, then click Next.',
    False, '');
  AAX_DirPage.Add('');

  AAX_DirPage.Values[0] := GetPreviousData('aaxDir', '');
  AAX_PageId := AAX_DirPage.ID;
end;
      
// -------------------------------------------------------------- 
// --------------------------------------------------------------
// --------------------------------------------------------------
procedure RegisterPreviousData(PreviousDataKey: Integer);
begin
  // Store the selected folder for further reinstall/upgrade
  // ***** VST *****
  SetPreviousData(PreviousDataKey, 'vst64Dir', VST64_DirPage.Values[0]);
  SetPreviousData(PreviousDataKey, 'vst32Dir', VST32_DirPage.Values[0]);
  // ***** VST 3 *****  
  SetPreviousData(PreviousDataKey, 'vst3_64Dir', VST3_64_DirPage.Values[0]);
  SetPreviousData(PreviousDataKey, 'vst3_32Dir', VST3_32_DirPage.Values[0]); 
  // ***** AAX ***** 
  SetPreviousData(PreviousDataKey, 'aaxDir', AAX_DirPage.Values[0]);
end;
      
// -------------------------------------------------------------- 
// --------------------------------------------------------------
// --------------------------------------------------------------
function NextButtonClick(CurPageID: Integer): Boolean;
begin
  // Set default folder if empty
  // ***** VST *****
  if VST64_DirPage.Values[0] = '' then
     VST64_DirPage.Values[0] := ExpandConstant('{pf}\Steinberg\VstPlugIns');
     Result := True;

  if VST32_DirPage.Values[0] = '' then
     VST32_DirPage.Values[0] := ExpandConstant('{pf32}\Steinberg\VstPlugIns');
     Result := True;

  // ***** VST 3 *****
  if VST3_64_DirPage.Values[0] = '' then
     VST3_64_DirPage.Values[0] := ExpandConstant('{pf}\Common Files\VST3');
     Result := True;

  if VST3_32_DirPage.Values[0] = '' then
     VST3_32_DirPage.Values[0] := ExpandConstant('{pf32}\Common Files\VST3');
     Result := True;

  // ***** AAX ***** 
  if AAX_DirPage.Values[0] = '' then
     AAX_DirPage.Values[0] := ExpandConstant('{pf}\Common Files\Avid\Audio\Plug-Ins');
     Result := True;
end;
       
// -------------------------------------------------------------- 
// --------------------------------------------------------------
// --------------------------------------------------------------
function UpdateReadyMemo(Space, NewLine, MemoUserInfoInfo, MemoDirInfo, MemoTypeInfo, MemoComponentsInfo, MemoGroupInfo, MemoTasksInfo: String): String;
var
  S: String;
begin
  // Fill the 'Ready Memo' with the normal settings and the custom settings
  S := '';
  S := S + MemoDirInfo + NewLine + NewLine;
  // ***** VST *****
  if IsComponentSelected('vst32') then begin
    S := S + 'VST32 path' + NewLine;
    S := S + Space + VST32_DirPage.Values[0] + NewLine;
  end;
  if IsComponentSelected('vst64') then begin
    S := S + 'VST64 path' + NewLine;
    S := S + Space + VST64_DirPage.Values[0] + NewLine;
  end;
  // ***** VST 3 *****
  if IsComponentSelected('vst3_32') then begin
    S := S + 'VST3 32 path' + NewLine;
    S := S + Space + VST3_32_DirPage.Values[0] + NewLine;
  end;
  if IsComponentSelected('vst3_64') then begin
    S := S + 'VST3 64 path' + NewLine;
    S := S + Space + VST3_64_DirPage.Values[0] + NewLine;
  end;
  // ***** AAX *****
  if IsComponentSelected('aax') then begin
    S := S + 'AAX path' + NewLine;
    S := S + Space + AAX_DirPage.Values[0] + NewLine;
  end;
  Result := S;
end;
      
// -------------------------------------------------------------- 
// --------------------------------------------------------------
// --------------------------------------------------------------
function ShouldSkipPage(PageID: Integer): Boolean;
begin
  // initialize result to not skip any page (not necessary, but safer)
  Result := False;
  // if the page that is asked to be skipped is your custom page, then...
  // ***** VST *****
  if PageID = VST64_PageId then // if the component is not selected, skip the page              
    Result := not IsComponentSelected('vst64');
  if PageID = VST32_PageId then
    Result := not IsComponentSelected('vst32');

  // ***** VST 3 *****
  if PageID = VST3_64_PageId then
    Result := not IsComponentSelected('vst3_64');
  if PageID = VST3_32_PageId then
    Result := not IsComponentSelected('vst3_32');

  // ***** AAX *****
  if PageID = AAX_PageId then
    Result := not IsComponentSelected('aax');
end; 
         
// -------------------------------------------------------------- 
// --------------------------------------------------------------
// --------------------------------------------------------------
function getVST64dir(Param: String): String;
begin
  Result := VST64_DirPage.Values[0];   // { Return the selected DataDir }
end;
          
// --------------------------------------------------------------
function getVST32dir(Param: String): String;
begin
  Result := VST32_DirPage.Values[0];
end;
   
// --------------------------------------------------------------
function getVST3_64dir(Param: String): String;
begin
  Result := VST3_64_DirPage.Values[0];
end;
          
// --------------------------------------------------------------
function getVST3_32dir(Param: String): String;
begin
  Result := VST3_32_DirPage.Values[0];
end;
           
// --------------------------------------------------------------
function getAAXdir(Param: String): String;
begin
  Result := AAX_DirPage.Values[0];
end;        
// --------------------------------------------------------------
// --------------------------------------------------------------
// --------------------------------------------------------------
// --------------------------------------------------------------
// --------------------------------------------------------------
// --------------------------------------------------------------
// --------------------------------------------------------------