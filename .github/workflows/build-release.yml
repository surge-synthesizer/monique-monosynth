name: Build Release Installer
on:
  push:
    branches:
      - main
      - 'releases/**'
    tags:
      - 'v**'

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

defaults:
  run:
    shell: bash

jobs:
  build_plugin:
    name: Release Build - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
          - os: macos-latest
          - os: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: apple-actions/import-codesign-certs@v3
        if: runner.os == 'macOS'
        with:
          p12-file-base64: ${{ secrets.MAC_CERTS_P12 }}
          p12-password: ${{ secrets.CERT_PWD }}

      - name: Prepare for JUCE
        uses: surge-synthesizer/sst-githubactions/prepare-for-juce@main
        with:
          os: ${{ runner.os }}


      - name: Build release version
        run: |
          
          export MAC_SIGNING_CERT="${{ secrets.MAC_SIGNING_CERT_NAME }}"
          export MAC_INSTALLING_CERT="${{ secrets.MAC_INSTALLING_CERT_NAME }}"
  
          export MAC_SIGNING_ID="${{ secrets.MAC_SIGNING_ID }}"
          export MAC_SIGNING_1UPW="${{ secrets.MAC_SIGNING_1UPW }}"
          export MAC_SIGNING_TEAM="${{ secrets.MAC_SIGNING_TEAM }}"
  
          cmake -S . -B ./build -DCMAKE_BUILD_TYPE=Release -DCMAKE_OSX_ARCHITECTURES="arm64;x86_64" 
          cmake --build ./build --config Release --target monique-installer --parallel 3

      - name: Show Installer Directory
        run: |
          ls -l ./build/installer

      # The aborted check updates plan
      #- name: Create Update HTML on Linux
      #  if: runner.os == 'Linux' && github.event_name != 'pull_request'
      #  run: |
      #    ./scripts/check-update/make-update.sh > ./build/installer/check-updates.html

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          path: build/installer
          name: build-${{ matrix.os }}

  publish-monique-nightly:
    name: Publish Monique Nightly
    # only create a release if a tag was created that is called e.g. v1.2.3
    # see also https://vcvrack.com/manual/Manifest#version
    if: ${{ github.ref == 'refs/heads/main' && github.repository_owner == 'surge-synthesizer' }}
    runs-on: ubuntu-latest
    needs: [build_plugin]
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Show Installer Directory
        run: |
          ls -R artifacts
      - name: Delete old release assets
        uses: mknejp/delete-release-assets@v1
        with:
          token: ${{ github.token }}
          tag: Nightly # This may also be of the form 'refs/tags/staging'
          assets: '*'
      - name: Upload release assets
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: artifacts/**/**/**
          tag: Nightly
          file_glob: true
      - name: Tag Repo
        uses: richardsimko/update-tag@v1
        with:
          tag_name: Nightly
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
